        -:    0:Source:s21_memcmp.c
        -:    1:#include "s21_string.h"
        -:    2:#include <string.h>
        -:    3:
       36:    4:int s21_memcmp(const void *str1, const void *str2, S21_SIZE_T n) {
       36:    5:  int ans = 0;
        -:    6:  S21_SIZE_T idx;
       36:    7:  const unsigned char *lh = str1;
       36:    8:  const unsigned char *rh = str2;
      174:    9:  for (idx = 0; idx < n; idx++, lh++, rh++) {
      158:   10:    if (*lh < *rh) {
       10:   11:      ans = -1;
       10:   12:      break;
      148:   13:    } else if (*lh > *rh) {
       10:   14:      ans = 1;
       10:   15:      break;
        -:   16:    }
        -:   17:  }
       36:   18:  return ans;
        -:   19:}
        -:   20:/*
        -:   21:int main(void) {
        -:   22:  // char *a1 = "abss";
        -:   23:  // char *a2 = "aabs";
        -:   24:  // // printf("CHECH string a1 = %s a2 = %s\n", a1, a2);
        -:   25:  // // printf("My = %d, real = %d num = 4\n", s21_memcmp(a1, a2, 4), memcmp(a1, a2, 4));
        -:   26:  // // printf("My = %d, real = %d num = 1\n", s21_memcmp(a1, a2, 1), memcmp(a1, a2, 1));
        -:   27:  // // printf("My = %d, real = %d num = 2\n", s21_memcmp(a1, a2, 2), memcmp(a1, a2, 2));
        -:   28:  // // printf("My = %d, real = %d num = 5\n", s21_memcmp(a1, a2, 5), memcmp(a1, a2, 5));
        -:   29:  // a1 = "aabs";
        -:   30:  // a2 = "abss";
        -:   31:  // printf("CHECH string a1 = %s a2 = %s\n", a1, a2);
        -:   32:  // printf("My = %d, real = %d num = 4\n", s21_memcmp(a1, a2, 4), memcmp(a1, a2, 4));
        -:   33:  // printf("My = %d, real = %d num = 1\n", s21_memcmp(a1, a2, 1), memcmp(a1, a2, 1));
        -:   34:  // printf("My = %d, real = %d num = 2\n", s21_memcmp(a1, a2, 2), memcmp(a1, a2, 2));
        -:   35:  // printf("My = %d, real = %d num = 5\n", s21_memcmp(a1, a2, 5), memcmp(a1, a2, 5));
        -:   36:  // a1 = "aabs";
        -:   37:  // a2 = "aabs";
        -:   38:  // printf("CHECH string a1 = %s a2 = %s\n", a1, a2);
        -:   39:  // printf("My = %d real = %d\n", s21_memcmp(a1, a2, 4), memcmp(a1, a2, 4));
        -:   40:  // printf("My = %d, real = %d num = 1\n", s21_memcmp(a1, a2, 1), memcmp(a1, a2, 1));
        -:   41:  // printf("My = %d, real = %d num = 2\n", s21_memcmp(a1, a2, 2), memcmp(a1, a2, 2));
        -:   42:  // printf("My = %d, real = %d num = 5\n", s21_memcmp(a1, a2, 5), memcmp(a1, a2, 5));
        -:   43:  printf("Numbers\n");
        -:   44:  int n1[] = {1, 2, 6, 4};
        -:   45:  int n2[] = {1, 2, 3, 4};
        -:   46:  printf("My = %d, real = %d\n", s21_memcmp(n1, n2, sizeof(int)*3), memcmp(n1, n2, sizeof(int)*3));
        -:   47:  printf("My = %d real = %d\n", s21_memcmp(n1, n2, sizeof(int)*2),  memcmp(n1, n2, sizeof(int)*2));
        -:   48:  printf("My = %d, real = %d\n", s21_memcmp(n1, n2, sizeof(int)*4), memcmp(n1, n2, sizeof(int)*4));
        -:   49:  int s1[] = {1, 2, 3, 4};
        -:   50:  int s2[] = {1, 2, 6, 4};
        -:   51:  printf("My = %d, real = %d\n", s21_memcmp(s1, s2, sizeof(int)*3), memcmp(s1, s2, sizeof(int)*3));
        -:   52:  printf("My = %d real = %d\n", s21_memcmp(s1, s2, sizeof(int)*2),  memcmp(s1, s2, sizeof(int)*2));
        -:   53:  printf("My = %d, real = %d\n", s21_memcmp(s1, s2, sizeof(int)*4), memcmp(s1, s2, sizeof(int)*4));
        -:   54:  // int g1[] = {1, 2, 3, 4};
        -:   55:  // int g2[] = {1, 2, 3, 4};
        -:   56:  // printf("My = %d, real = %d\n", s21_memcmp(g1, g2, sizeof(int)*2), memcmp(g1, g2, sizeof(int)*2));
        -:   57:  exit(0);
        -:   58:}
        -:   59:*/
